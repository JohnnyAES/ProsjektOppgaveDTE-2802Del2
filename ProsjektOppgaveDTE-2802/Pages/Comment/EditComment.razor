
@page "/comment/edit/{CommentId:int}"
@using ProsjektOppgaveBlazor.data.Models;
@inject HttpClient BlogHttpClient
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Edit comment</h3>

@if (comment == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@comment" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <div class="form-group">
                        <div>
                            <label for="Name">Comment:</label>
                        <InputText class="form-control" @bind-Value="comment.Text" />
                        <ValidationMessage For="@(()=>comment.Text)" />
                        </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int CommentId { get; set; }

    private Comment comment;
    protected override async Task OnInitializedAsync()
    {
        comment = await BlogHttpClient.GetFromJsonAsync<Comment>($"https://localhost:7022/Comment/{CommentId}");
    }
    
    private async Task Save()
    {
        var token = await localStorage.GetItemAsync<string>("authToken");
        BlogHttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        var response = await BlogHttpClient.PutAsJsonAsync($"https://localhost:7022/Comment/{CommentId}", comment);
        NavigationManager.NavigateTo($"/comments/{comment.PostId}");
    }

}