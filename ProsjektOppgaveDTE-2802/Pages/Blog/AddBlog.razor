@page "/blog"

@using ProsjektOppgaveBlazor.data.Models;
@inject HttpClient BlogHttpClient
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager


<h3>Create blog</h3>

@if (blog == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-3">
            <EditForm Model="@blog" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <div>
                        <label for="Name">Blog Name:</label>
                        <InputText class="form-control" @bind-Value="blog.Name" />
                        <ValidationMessage For="@(()=>blog.Name)" />

                    </div>
                    <div class="form-check form-switch">
                        <label for="Status">Allow post and comments</label>
                        <InputCheckbox class="form-check-input" @bind-Value="Status" />
                    </div>
                        <button class="btn btn-primary" type="submit">Save</button>
                    
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int BlogId { get; set; }

    private bool Status
    {
        get
        {
            if (blog.Status != 1)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        set
        {
            if (!value)
            {
                blog.Status = 0;
            }
            else
            {
                blog.Status = 1;
            }
        }
    }

    private Blog blog = new Blog();


    private async Task Save()
    {
        
        var token = await localStorage.GetItemAsync<string>("authToken");
        BlogHttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        
        var response = await BlogHttpClient.PostAsJsonAsync("https://localhost:7022/Blog", blog);
        NavigationManager.NavigateTo("/blogs");

    }

}